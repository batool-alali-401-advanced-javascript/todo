{"version":3,"sources":["hooks/useForm.js","components/todo/form.js","context/show.js","context/paginition.js","components/todo/list.js","hooks/useAjax.js","components/todo/pagination.js","components/todo/toggleHideShow.js","components/todo/itemPpage.js","components/todo/todo-connected.js","app.js","index.js"],"names":["useForm","cb","useState","item","setItem","event","target","name","value","e","preventDefault","TodoForm","props","handleSubmit","handleInputChange","Form","onSubmit","Group","Label","Control","type","placeholder","onChange","controlId","custom","defaultValue","min","max","Button","ToggleContext","React","createContext","ToggleStatusHideShow","changeStatus","setState","status","state","toggleStatus","Provider","this","children","Component","PaginationContext","Pagination","currentPage","setCurrentPage","itemPerPage","setItemPerPage","indexOfLastItem","indexOfFirstItem","currentItem","list","sort","a","b","difficulty","slice","paginate","pageNumber","numberOfPages","TodoList","toggleContext","useContext","pagination","console","log","map","className","complete","toString","key","_id","onClick","handleComplete","assignee","text","variant","handleDelete","todoAPI","useAjax","setList","_getTodoItems","axios","get","then","response","data","useEffect","due","Date","url","method","mode","cache","headers","JSON","stringify","catch","error","id","filter","i","savedItem","listItem","totalitems","pageNumbers","Math","ceil","push","number","length","Content","size","context","contextType","ChangeNumberOfPages","ToDo","_addItem","_toggleComplete","deleteItem","Navbar","bg","Nav","Link","href","Brand","App","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.fb8660c9.chunk.js","sourcesContent":["import { useState } from 'react';\r\nconst useForm = (cb) => {\r\n  const [item, setItem] = useState({});\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    cb(item);\r\n  };\r\n  const handleInputChange = (event) => {\r\n    setItem({ ...item, [event.target.name]: event.target.value });\r\n  };\r\n  return [item, handleInputChange, handleSubmit];\r\n};\r\n\r\nexport default useForm;\r\n","import React, { useState, useEffect} from 'react';\nimport useForm from '../../hooks/useForm';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\nfunction TodoForm (props) {\n\n  //const [item, setItem]=  useState([]);\n \n  const [item, handleInputChange, handleSubmit] = useForm(handleForm);\n  function handleForm(item) {\n    props.handleSubmit(item)\n  }\n  // function handleInputChange(e)  {\n  //   setItem({ item: {...item.item, [e.target.name]: e.target.value } });\n  // };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   e.target.reset();\n  //   props.handleSubmit(item.item);\n  //   const item1 = {};\n  //   setItem({item1});\n  // };\n\n  \n    return (\n      <>\n        <h3>Add Item</h3>\n        <Form onSubmit={handleSubmit}>\n        <Form.Group >\n          <Form.Label>\n            To Do Item\n            <Form.Control type=\"text\" name=\"text\" placeholder=\"Item\" onChange={handleInputChange} />\n          </Form.Label>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicRangeCustom\">\n          <Form.Control type=\"range\" custom defaultValue=\"1\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n        </Form.Group>\n        <Form.Group >\n          <Form.Label>\n            Assigned to\n            <Form.Control type=\"text\" placeholder=\"Assignee name\" name=\"assignee\" onChange={handleInputChange} />\n          </Form.Label>\n        </Form.Group>\n        <Form.Group >\n          <Button type=\"submit\">Add Item</Button>\n        </Form.Group>\n        </Form>\n      </>\n    );\n  \n}\n\nexport default TodoForm;\n","import React from 'react';\r\n\r\nexport const ToggleContext = React.createContext();\r\n\r\nclass ToggleStatusHideShow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        status: 'show',\r\n      toggleStatus: this.changeStatus,\r\n    };\r\n  }\r\n  changeStatus = () => {\r\n  \r\n    this.setState({ status: this.state.status === 'show' ? 'hide' : 'show' });\r\n  };\r\n  render() {\r\n    return (\r\n      <ToggleContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </ToggleContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToggleStatusHideShow;\r\n","import React ,{useState } from 'react';\r\n\r\nexport const PaginationContext = React.createContext();\r\n\r\nfunction Pagination (props) {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [itemPerPage, setItemPerPage] = useState(3);\r\n  \r\n    const indexOfLastItem = currentPage * itemPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemPerPage;\r\n    const list = props.list.sort((a,b)=>   a.difficulty > b.difficulty ? 1 : -1 );\r\n    let currentItem = list.slice(indexOfFirstItem, indexOfLastItem);\r\n  \r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const setItem = numberOfPages => setItemPerPage(numberOfPages);\r\n\r\n const state = {\r\n    currentPage,\r\n    itemPerPage,\r\n    setCurrentPage :setCurrentPage,\r\n    setItemPerPage : setItemPerPage,\r\n    currentItem,\r\n    paginate,\r\n    setItem,\r\n\r\n }\r\n \r\n    return (\r\n      <PaginationContext.Provider value={state}>\r\n        {props.children}\r\n      </PaginationContext.Provider>\r\n    );\r\n  \r\n}\r\n\r\nexport default Pagination;\r\n","import React, {useContext} from 'react';\n// import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport './style.scss';\nimport { ToggleContext } from '../../context/show';\nimport { PaginationContext }  from '../../context/paginition'\n\nfunction TodoList  (props) {\n  const toggleContext = useContext(ToggleContext);\n  const pagination = useContext(PaginationContext);\n  console.log(pagination.currentItem);\n  if (pagination.currentItem){\n    return (\n      <ul>\n        {pagination.currentItem.map(item => (\n            <li\n            className={`complete-${item.complete.toString()} complete-${item.complete.toString()}-${toggleContext.status} `}\n            key={item._id}\n            >\n             \n            \n            <span onClick={() => props.handleComplete(item._id)}>\n            {/* <button  className='delete' onClick={() => props.handleDelete(item._id)}>X</button> */}\n            \n            <div>{item.complete.toString()} {item.assignee}</div>\n                  {item.text} difficulty: {item.difficulty }\n            </span>\n            <Button variant=\"danger\" className='delete' onClick={() => props.handleDelete(item._id)}>X</Button>\n          </li>\n        ))}\n      </ul>\n    );\n\n  \n  }\n  else {\n    return(\n      null\n    )\n  }\n   \n}\n// class TodoList extends React.Component {\n\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.list.map(item => (\n//           <li\n//             className={`complete-${item.complete.toString()}`}\n//             key={item._id}\n//           >\n//             <span onClick={() => this.props.handleComplete(item._id)}>\n//               {item.text}\n//             </span>\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n\nexport default TodoList;\n","import { useState , useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst todoAPI = 'https://todo-app-server-lab32.herokuapp.com/api/v1/todo';\r\n\r\nconst useAjax = () => {\r\n    const [list, setList] = useState([]);\r\n\r\n    const _addItem = (item) => {\r\n      item.due = new Date();\r\n       // item.complete=false;\r\n      console.log(item);\r\n      axios({\r\n        url:todoAPI,\r\n        method: 'post',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        data: JSON.stringify(item)\r\n      })\r\n        .then(response => {\r\n            setList([...list, response.data])\r\n            })\r\n        .catch(console.error);\r\n    };\r\n  \r\n    const _toggleComplete = id => {\r\n  \r\n      let item = list.filter(i => i._id === id)[0] || {};\r\n  \r\n      if (item._id) {\r\n  \r\n        item.complete = !item.complete;\r\n  \r\n        let url = `${todoAPI}/${id}`;\r\n  \r\n        axios({\r\n          method: 'put',\r\n          url : url,\r\n          mode: 'cors',\r\n          cache: 'no-cache',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          data: JSON.stringify(item)\r\n        })\r\n          .then(savedItem => {\r\n            setList(list.map(listItem => listItem._id === item._id ? savedItem.data : listItem));\r\n          })\r\n          .catch(console.error);\r\n      }\r\n    };\r\n    const deleteItem = id => {\r\n        let item = list.filter(i => i._id === id)[0] || {};\r\n        console.log('itemmm', item);\r\n        if (item._id) {\r\n          let url = `${todoAPI}/${id}`;\r\n    \r\n          axios( {\r\n              url : url,\r\n            method: 'delete',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            headers: { 'Content-Type': 'application/json' },\r\n          })\r\n            .then(() => {\r\n            //   setList(list.filter(listItem => listItem._id != item._id ? true: false ));\r\n            let a=list.filter(listItem => listItem._id != item._id ? true: false );\r\n            console.log('aaaaaaa',a);\r\n            setList(a);\r\n            })\r\n            .catch(console.error);\r\n        }\r\n      };\r\n  \r\n    const _getTodoItems = () => {\r\n    axios.get(todoAPI)\r\n      .then(response => setList(response.data))\r\n    };\r\n    useEffect(_getTodoItems, []);\r\n    return [list , _addItem , _toggleComplete , _getTodoItems ,deleteItem]\r\n\r\n}\r\n\r\n\r\nexport default useAjax;","import React, {useContext} from 'react';\r\nimport { PaginationContext }  from '../../context/paginition'\r\n\r\nconst Pagination = ({totalitems}) => {\r\n  const pageNumbers = [];\r\n  const pagination = useContext(PaginationContext);\r\n\r\n  for (let i = 1; i <= Math.ceil(totalitems / pagination.itemPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\nconsole.log('fff' , pagination);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => pagination.paginate(number)}  className='page-link'>\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul className='pagination'>\r\n          <li className='page-item'>\r\n            <a onClick={ pageNumbers.length != pagination.currentPage ? () => pagination.paginate(pagination.currentPage++): () => pagination.paginate(pagination.currentPage)}  className='page-link'>\r\n              Next\r\n            </a>\r\n          </li>\r\n          <li  className='page-item'>\r\n            <a onClick={pagination.currentPage > 1 ? () => pagination.paginate(pagination.currentPage--): () => pagination.paginate(pagination.currentPage)}  className='page-link'>\r\n              Previous\r\n            </a>\r\n          </li>\r\n       \r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { ToggleContext } from '../../context/show';\r\nimport Button from 'react-bootstrap/Button';\r\nclass Content extends React.Component {\r\n\r\n  static contextType = ToggleContext; \r\n\r\n  render() {\r\n    return (\r\n      <>\r\n       <Button variant=\"primary\" size=\"lg\"  onClick={this.context.toggleStatus} className=\"hideShow\">\r\n       {this.context.status === 'show' ? 'hide' : 'show'} complete items\r\n  </Button>{' '}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Content;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { PaginationContext }  from '../../context/paginition'\r\nimport './todo.scss';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nfunction ChangeNumberOfPages  () {\r\n\r\nconst pagination = useContext(PaginationContext);\r\nconst changHandler = (e) =>{\r\n    pagination.setItem(e.target.value)\r\n}\r\n  \r\n    return (\r\n      <>\r\n       <select onChange={changHandler}> \r\n       <option>items per page</option>\r\n           <option value='2'>2</option>\r\n           <option value='4'>4</option>\r\n           <option value='6'>6</option>\r\n       </select>\r\n      </>\r\n    );\r\n  \r\n}\r\nexport default ChangeNumberOfPages;","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n// import axios from 'axios';\nimport useAjax from '../../hooks/useAjax';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport './todo.scss';\n\nimport Pagination from './pagination.js'\nimport ToggleHideShow from './toggleHideShow'\nimport PaginationContext from '../../context/paginition'\nimport ToggleShowProvider from '../../context/show';\nimport ChangeNumberOfPages from './itemPpage'\n\n\n\nconst todoAPI = 'https://todo-app-server-lab32.herokuapp.com/api/v1/todo';\n\n\nconst ToDo = () => {\n\n  \n  const [list , _addItem , _toggleComplete , _getTodoItems , deleteItem] = useAjax();\n  // useEffect(_getTodoItems, []);\n\n  return (\n    <main>\n      <header>\n      <Navbar bg=\"primary\" variant=\"dark\">\n      <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          </Nav>\n    </Navbar>\n    <Navbar bg=\"dark\" variant=\"dark\">\n              <Navbar.Brand href=\"#home\"> There are {list.filter(item => !item.complete).length} Items To Complete</Navbar.Brand>\n              </Navbar>\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={_addItem} />\n        </div>\n\n        <PaginationContext list={list}>\n\n        <div className=\"list\">\n          <ToggleShowProvider list={list}>\n          <ToggleHideShow/>\n          <ChangeNumberOfPages/>\n          \n          <TodoList\n            handleComplete={_toggleComplete}\n            handleDelete={deleteItem}\n          />\n          </ToggleShowProvider>\n          <Pagination\n        totalitems={list.length}\n      />\n        </div>\n\n        </PaginationContext>\n      </section>\n    </main>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\n\n// import ToDo from './components/todo/todo.js';\nimport ToDoConn from './components/todo/todo-connected'\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <ToDoConn />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}