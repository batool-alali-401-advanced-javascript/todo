{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo.js","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","Form","onSubmit","preventDefault","reset","handleSubmit","item1","Group","Label","Control","type","placeholder","onChange","controlId","custom","defaultValue","min","max","Button","TodoList","console","log","list","map","className","complete","toString","key","_id","onClick","handleComplete","text","ToDo","setList","useEffect","difficulty","assignee","Navbar","bg","variant","Nav","Link","href","Brand","filter","length","Math","random","id","i","list1","listItem","App","React","Component","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5be97657.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nfunction TodoForm (props) {\n\n  const [item, setItem]=  useState([]);\n \n  \n  function handleInputChange(e)  {\n    setItem({ item: {...item.item, [e.target.name]: e.target.value } });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item.item);\n    const item1 = {};\n    setItem({item1});\n  };\n\n  \n    return (\n      <>\n        <h3>Add Item</h3>\n        <Form onSubmit={handleSubmit}>\n        <Form.Group >\n          <Form.Label>\n            To Do Item\n            <Form.Control type=\"text\" name=\"text\" placeholder=\"Item\" onChange={handleInputChange} />\n          </Form.Label>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicRangeCustom\">\n          <Form.Control type=\"range\" custom defaultValue=\"1\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n        </Form.Group>\n        <Form.Group >\n          <Form.Label>\n            Assigned to\n            <Form.Control type=\"text\" placeholder=\"Assignee name\" name=\"assignee\" onChange={handleInputChange} />\n          </Form.Label>\n        </Form.Group>\n        <Form.Group >\n          <Button type=\"submit\">Add Item</Button>\n        </Form.Group>\n        </Form>\n      </>\n    );\n  \n}\n\nexport default TodoForm;\n","import React from 'react';\n\n\n\nfunction TodoList  (props) {\n  \n  console.log(props);\n  if (props.list.list){\n    return (\n      <ul>\n        {props.list.list.map(item => (\n          <li\n            className={`complete-${item.complete.toString()}`}\n            key={item._id}\n          >\n            <span onClick={() =>props.handleComplete(item._id)}>\n              {item.text}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n\n  \n  }\n  else {\n    return(\n      null\n    )\n  }\n   \n}\n// class TodoList extends React.Component {\n\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.list.map(item => (\n//           <li\n//             className={`complete-${item.complete.toString()}`}\n//             key={item._id}\n//           >\n//             <span onClick={() => this.props.handleComplete(item._id)}>\n//               {item.text}\n//             </span>\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport './todo.scss';\n\nfunction ToDo (props){\n let [list, setList]=  useState([]);\n\n function addItem(item){\n\n  item._id = Math.random();\n  item.complete = false;\n   setList({list:[...list.list, item]});\n }\n\n function toggleComplete(id){\n  let item = list.list.filter(i => i._id === id)[0] || {};\n  if (item._id) {\n      item.complete = !item.complete;\n      let list1 = list.list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList({list:list1});\n    }\n }\n\nuseEffect(() => {\n  let list = [\n    { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n    { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n    { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n    { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n    { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  ];\n\n  setList({list});\n\n}, []);\n\n// console.log(list);\n// console.log(list.list);\n\nif (list.list){\nreturn (\n          \n          <>\n            <header>\n          <Navbar bg=\"primary\" variant=\"dark\">\n          <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          </Nav>\n          <br></br>\n        </Navbar>\n              {/* <h2> */}\n              <br />\n\n              <Navbar bg=\"dark\" variant=\"dark\">\n              <Navbar.Brand href=\"#home\"> There are {list.list.filter(item => !item.complete).length} Items To Complete</Navbar.Brand>\n              </Navbar>\n              \n              {/* </h2> */}\n            </header>\n    \n            <section className=\"todo\">\n    \n              <div>\n                <TodoForm handleSubmit={addItem} />\n              </div>\n    \n              <div>\n                <TodoList\n                  list={list}\n                  handleComplete={toggleComplete}\n                />\n              </div>\n            </section>\n          </>\n  \n);\n\n}else {return null}\n}\n\n// class ToDo extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       list: [],\n//     };\n//   }\n\n//   addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     this.setState({ list: [...this.state.list, item]});\n//   };\n\n//   toggleComplete = id => {\n\n//     let item = this.state.list.filter(i => i._id === id)[0] || {};\n\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n//       this.setState({list});\n//     }\n\n//   };\n\n//   componentDidMount() {\n  //   let list = [\n  //     { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //     { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //     { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //     { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //     { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //   ];\n\n  //   this.setState({list});\n  // }\n\n//   render() {\n//     return (\n//       <>\n//         <header>\n//           <h2>\n//           There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n//           </h2>\n//         </header>\n\n//         <section className=\"todo\">\n\n//           <div>\n//             <TodoForm handleSubmit={this.addItem} />\n//           </div>\n\n//           <div>\n//             <TodoList\n//               list={this.state.list}\n//               handleComplete={this.toggleComplete}\n//             />\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n// }\n\nexport default ToDo;\n","import React from 'react';\n\nimport ToDo from './components/todo/todo.js';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <ToDo />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}